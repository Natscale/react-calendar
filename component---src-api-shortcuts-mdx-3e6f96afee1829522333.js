(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{E18z:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return u})),n.d(t,"default",(function(){return d}));var a=n("Fcif"),r=n("+I+c"),c=(n("mXGw"),n("/FXl")),o=n("TjRS"),l=n("xFLV"),b=(n("aD51"),["components"]),u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!Object.prototype.hasOwnProperty.call(u,"__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/API/Shortcuts.mdx"}});var i={_frontmatter:u},s=o.a;function d(e){var t=e.components,n=Object(r.a)(e,b);return Object(c.b)(s,Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"basic"},"Basic"),Object(c.b)("p",null,"By default the calendar starts from Sun which is represented 0 index.\nYou can provide the index for any other day that you want as start of the week."),Object(c.b)(l.a,{mdxType:"Value"}),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",{parentName:"tr",align:null},"Prop"),Object(c.b)("th",{parentName:"tr",align:null},"Type"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"shortcutButtons")," (required)"),Object(c.b)("td",{parentName:"tr",align:null},Object(c.b)("inlineCode",{parentName:"td"},"Array<{ id: string, render: () => React.ReactNode }>"))))),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-js"},"import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport default function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  const calendarRef = useRef(null);\n\n  const onDateChange = function onDateChange(date) {\n    if (calendarRef.current) {\n      calendarRef.current.setView(date);\n    }\n  };\n\n  return (\n    <CalendarWithShortcuts\n      shortcutButtons={[\n        {\n          id: '1',\n          render: () => {\n            return <button onClick={() => onDateChange(new Date(2011, 11, 24))}>24, Sept, 2011</button>;\n          },\n        },\n      ]}\n      ref={calendarRef}\n      value={value}\n      onChange={onChange}\n    />\n  );\n}\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/API/Shortcuts.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-api-shortcuts-mdx-3e6f96afee1829522333.js.map