{"version":3,"sources":["webpack:///../src/API/Props.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","type","isMDXComponent"],"mappings":"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","file":"component---src-api-props-mdx-39090c30f2ecf809f113.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/tusharf5/dev/github/natscale/react-calendar/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Hint } from '@nejcm/docz-theme-extended';\nimport Value from '../Components/Props/value';\nimport StartOfWeek from '../Components/Props/startOfWeek';\nimport Weekends from '../Components/Props/weekends';\nimport Labels from '../Components/Props/monthsLabel';\nimport IsMultiSelector from '../Components/Props/isMultiSelector';\nimport IsRangeSelector from '../Components/Props/isRangeSelector';\nimport FixedRange from '../Components/Props/fixedRange';\nimport NoPadRangeCell from '../Components/Props/noPadRangeCell';\nimport HideAdjacentDates from '../Components/Props/hideAdjacentDates';\nimport InitialView from '../Components/Props/initialView';\nimport IsDisabled from '../Components/Props/isDisabled';\nimport IsHighlight from '../Components/Props/isHighlight';\nimport LockView from '../Components/Props/lockView';\nimport UseDarkMode from '../Components/Props/useDarkMode';\nimport Size from '../Components/Props/size';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"basic\"\n    }}>{`Basic`}</h2>\n    <p>{`By default the calendar starts from Sun which is represented 0 index.\nYou can provide the index for any other day that you want as start of the week.`}</p>\n\n    <Value mdxType=\"Value\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`value`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Date`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onChange`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: Date) => void`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"start-day-of-week\"\n    }}>{`Start Day Of Week`}</h2>\n    <p>{`By default the calendar starts from Sun which is represented 0 index.\nYou can provide the index for any other day that you want as start of the week.`}</p>\n\n    <StartOfWeek mdxType=\"StartOfWeek\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Enum`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`startOfWeek`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`0`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`0 , 1 , 2 , 3 , 4 , 5 , 6`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar startOfWeek={1} value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"weekend\"\n    }}>{`Weekend`}</h2>\n    <p>{`By default the calendar starts from Sun which is represented 0 index.\nYou can provide the index for any other day that you want as start of the week.`}</p>\n\n    <Weekends mdxType=\"Weekends\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Enum`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`weekends`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array<number>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[0,6]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`0 , 1 , 2 , 3 , 4 , 5 , 6`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar weekends={[0, 6]} value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"change-labels\"\n    }}>{`Change Labels`}</h2>\n    <p>{`The calendar uses english labels for months and weeks by default. But you can change it\nusing the props provided.`}</p>\n\n    <Labels mdxType=\"Labels\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`weekDaysLabel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Record<0 ... 6, string>`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`monthsLabel`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Record<0 ... 11, string>`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nconst monthsLabel = {\n  0: 'janvier',\n  1: 'février',\n  2: 'mars',\n  3: 'avril',\n  4: 'mai',\n  5: 'juin',\n  6: 'juillet',\n  7: 'août',\n  8: 'septembre',\n  9: 'octobre',\n  10: 'novembre',\n  11: 'décembre',\n};\n\nconst weekDaysLabel = {\n  0: 'Di',\n  1: 'Lu',\n  2: 'Ma',\n  3: 'Me',\n  4: 'Je',\n  5: 'Ve',\n  6: 'Sa',\n};\n\nexport default function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar weekDaysLabel={weekDaysLabel} monthsLabel={monthsLabel} value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"select-multiple-dates\"\n    }}>{`Select Multiple Dates`}</h2>\n    <p>{`Enable multi selection.`}</p>\n\n    <IsMultiSelector mdxType=\"IsMultiSelector\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isMultiSelector`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`value`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`Array<Date>`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onChange`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: Array<Date>) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState([]);\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar isMultiSelector value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"select-date-range\"\n    }}>{`Select Date Range`}</h2>\n    <p>{`Select a date range.`}</p>\n\n    <IsRangeSelector mdxType=\"IsRangeSelector\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isRangeSelector`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`value`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[Date, Date]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onChange`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: [Date, Date]) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState([]);\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar isRangeSelector value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"fixed-date-range\"\n    }}>{`Fixed Date Range`}</h2>\n    <Hint type=\"info\" mdxType=\"Hint\">Only works if calendar is a range selector</Hint>\n\n    <FixedRange mdxType=\"FixedRange\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`fixedRange`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`value`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[Date, Date]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`onChange`}</inlineCode>{` (required)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(value: [Date, Date]) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState([]);\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar fixedRange={5} isRangeSelector value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"date-range-with-no-padding\"\n    }}>{`Date Range With No Padding`}</h2>\n    <Hint type=\"info\" mdxType=\"Hint\">Only works if calendar is a range selector</Hint>\n\n    <NoPadRangeCell mdxType=\"NoPadRangeCell\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`noPadRangeCell`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState([]);\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar noPadRangeCell isRangeSelector value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"hide-adjacent-dates\"\n    }}>{`Hide Adjacent Dates`}</h2>\n    <p>{`Hide Adjacent Dates.`}</p>\n\n    <HideAdjacentDates mdxType=\"HideAdjacentDates\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`hideAdjacentDates`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar hideAdjacentDates value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"classname\"\n    }}>{`Classname`}</h2>\n    <p>{`Pass custom classnames.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`className`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar className=\"my-class\" value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"initial-view\"\n    }}>{`Initial View`}</h2>\n    <p>{`Todo`}</p>\n\n    <InitialView mdxType=\"InitialView\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Enum`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`initialView`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`enum`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\"month_dates\"`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`\"years\", \"months\", \"month_dates\"`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar initialView=\"years\" value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"custom-dates-disabled\"\n    }}>{`Custom Dates Disabled`}</h2>\n    <p>{`Todo`}</p>\n\n    <IsDisabled mdxType=\"IsDisabled\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isDisabled`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(date: Date) => boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  const isDisabled = useCallback((date) => {\n    // disable wednesdays and any date that is divisible by 5\n    if (date.getDay() === 3 || date.getDate() % 5 === 0) {\n      return true;\n    }\n  }, []);\n\n  return <Calendar isDisabled={isDisabled} value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"custom-dates-highlight\"\n    }}>{`Custom Dates Highlight`}</h2>\n    <p>{`Todo`}</p>\n\n    <IsHighlight mdxType=\"IsHighlight\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`isHighlight`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(date: Date) => boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  const isHighlight = useCallback((date) => {\n    // highlight any data that is divisible by 5\n    if (date.getDate() % 5 === 0) {\n      return true;\n    }\n  }, []);\n\n  return <Calendar isHighlight={isHighlight} value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"lock-view\"\n    }}>{`Lock View`}</h2>\n    <p>{`Todo`}</p>\n\n    <LockView mdxType=\"LockView\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`lockView`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar lockView value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"dark-mode\"\n    }}>{`Dark Mode`}</h2>\n    <p>{`Enable/Disable dark mode.`}</p>\n\n    <UseDarkMode mdxType=\"UseDarkMode\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`useDarkMode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar useDarkMode value={value} onChange={onChange} />;\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"size-control\"\n    }}>{`Size Control`}</h2>\n    <p>{`Enable/Disable dark mode.`}</p>\n\n    <Size mdxType=\"Size\" />\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`fontSize`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`16`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`size`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`276`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport function App() {\n  const [value, setValue] = useState(new Date());\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar size={420} fontSize={18} value={value} onChange={onChange} />;\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}