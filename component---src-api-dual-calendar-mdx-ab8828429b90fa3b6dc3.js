(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{"70SF":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return d}));var n=a("Fcif"),r=a("+I+c"),l=(a("mXGw"),a("/FXl")),c=a("TjRS"),o=a("Ljjo"),b=(a("aD51"),["components"]),i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!Object.prototype.hasOwnProperty.call(i,"__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/API/DualCalendar.mdx"}});var s={_frontmatter:i},u=c.a;function d(e){var t=e.components,a=Object(r.a)(e,b);return Object(l.b)(u,Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"basic"},"Basic"),Object(l.b)("p",null,"By default the calendar starts from Sun which is represented 0 index.\nYou can provide the index for any other day that you want as start of the week."),Object(l.b)(o.a,{mdxType:"Value"}),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Prop"),Object(l.b)("th",{parentName:"tr",align:null},"Type"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"shortcutButtons")," (required)"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"Array<{ id: string, render: () => React.ReactNode }>"))))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import React, { useCallback, useState } from 'react';\n\nimport { Calendar } from '@natscale/react-calendar';\n\nimport '@natscale/react-calendar/dist/main.css';\n\nexport default function App() {\n  const [value, setValue] = useState([]);\n\n  const onChange = useCallback(\n    (val) => {\n      setValue(val);\n    },\n    [setValue],\n  );\n\n  return <Calendar showDualCalendar isRangeSelector value={value} onChange={onChange} />;\n}\n")))}void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/API/DualCalendar.mdx"}}),d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-api-dual-calendar-mdx-ab8828429b90fa3b6dc3.js.map